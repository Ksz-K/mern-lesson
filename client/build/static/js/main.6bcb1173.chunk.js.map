{"version":3,"sources":["redux/postsRedux.js","components/features/PostForm/PostForm.js","components/common/SectionTitle/SectionTitle.js","config.js","redux/store.js","components/layout/PageContainer/PageContainer.js","components/common/Logo/Logo.js","components/layout/MainMenu/MainMenu.js","components/features/NavBar/CreateRandomID.js","components/features/NavBar/NavBar.js","components/layout/MainLayout/MainLayout.js","components/common/PageTitle/PageTitle.js","components/common/Pagination/Pagination.js","components/common/SmallTitle/SmallTitle.js","components/common/HtmlBox/HtmlBox.js","components/features/PostSummary/PostSummary.js","components/common/CutText/CutText.js","components/features/PostsList/PostsList.js","components/features/Posts/Posts.js","components/features/Posts/PostsContainer.js","components/pages/Home/HomePage.js","components/features/PostsCounter/PostsCounter.js","components/features/PageParameters/PageParameters.js","components/pages/Posts/PostsPage.js","components/pages/Contact/ContactPage.js","components/pages/NotFound/NotFoundPage.js","components/pages/AddPost/AddPostPage.js","components/pages/PostItem/PostItemPage.js","App.js","index.js","components/common/Alert/Alert.js","components/common/Button/Button.js","components/common/Spinner/Spinner.js","components/common/TextField/TextField.js"],"names":["getPosts","posts","data","getSinglePost","id","dispatch","a","async","startRequest","axios","get","API_URL","res","payload","type","LOAD_SINGLE_POST","endRequest","errorRequest","message","addPostRequest","post","config","headers","Promise","resolve","reject","setTimeout","updEditedPost","loadPostsByPageRequest","page","postsPerPage","startAt","limit","amount","presentPage","loadPostsByPage","getRequest","request","START_REQUEST","END_REQUEST","resetRequest","RESET_REQUEST","error","ERROR_REQUEST","LOAD_POSTS_PAGE","getPages","Math","ceil","createActionName","name","LOAD_POSTS","initialState","singlePost","pending","success","reducer","statePart","action","connect","state","editedPost","addPost","withRouter","typeOfAction","match","useEffect","Object","keys","length","path","useState","author","title","content","formData","setFormData","handleChange","e","target","value","refreshPage","global","location","reload","sendNewPost","updPost","_id","variant","onSubmit","preventDefault","label","onChange","className","text","options","placeholder","toolbar","buttons","SectionTitle","children","BASE_URL","rootReducer","combineReducers","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","PageContainer","Logo","links","src","alt","MainMenu","map","link","index","key","pathname","to","props","CreateRandomID","floor","random","ID","console","log","NavBar","setLinks","randomPost","MainLayout","PageTitle","Pagination","initialPage","changePage","newPage","postsOnPage","setState","getSeenStatus","display","this","pages","postsNo","currentPage","style","onClick","Array","el","React","Component","SmallTitle","otherProps","HtmlBox","ReactHtmlParser","PostSummary","maxLength","shortenText","substr","lastIndexOf","slice","substring","cutText","Button","PostsList","Posts","Spinner","Alert","HomePage","PostsCounter","propsType","PropTypes","array","isRequired","number","forPageSelection","postPerPage","startPage","PostsPage","ContactPage","width","NotFound","counter","componentDidMount","intervalId","setInterval","countdown","componentWillUnmount","clearInterval","color","AddPostPage","PostForm","params","appId","href","xmlns","height","viewBox","d","transform","App","exact","component","Home","Contact","AddPost","PostItem","ReactDOM","render","document","getElementById","animationIn","animationOut","icon","TextField"],"mappings":"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","file":"static/js/main.6bcb1173.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport { API_URL } from \"../config\";\r\n\r\n/* ACTIONS */\r\nexport const getPosts = ({ posts }) => posts.data;\r\nexport const loadPosts = payload => ({ payload, type: LOAD_POSTS });\r\nexport const loadSinglePost = payload => ({ payload, type: LOAD_SINGLE_POST });\r\nexport const loadPostsRequest = () => {\r\n  return async dispatch => {\r\n    dispatch(startRequest());\r\n    try {\r\n      let res = await axios.get(`${API_URL}/posts`);\r\n      // await new Promise((resolve, reject) => setTimeout(resolve, 2000));\r\n      dispatch(loadPosts(res.data));\r\n      dispatch(endRequest());\r\n    } catch (e) {\r\n      dispatch(errorRequest(e.message));\r\n    }\r\n  };\r\n};\r\n\r\nexport const getSinglePost = id => {\r\n  return async dispatch => {\r\n    dispatch(startRequest());\r\n    try {\r\n      let res = await axios.get(`${API_URL}/posts/${id}`);\r\n      // await new Promise((resolve, reject) => setTimeout(resolve, 2000));\r\n      dispatch(loadSinglePost(res.data));\r\n      dispatch(endRequest());\r\n    } catch (e) {\r\n      dispatch(errorRequest(e.message));\r\n    }\r\n  };\r\n};\r\n\r\nexport const addPostRequest = post => {\r\n  return async dispatch => {\r\n    dispatch(startRequest());\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    };\r\n    try {\r\n      await axios.post(`${API_URL}/posts`, post, config);\r\n      await new Promise((resolve, reject) => setTimeout(resolve, 2000));\r\n      dispatch(endRequest());\r\n    } catch (e) {\r\n      dispatch(errorRequest(e.message));\r\n    }\r\n  };\r\n};\r\n\r\nexport const updEditedPost = (post, id) => {\r\n  return async dispatch => {\r\n    dispatch(startRequest());\r\n    try {\r\n      await axios.post(`${API_URL}/posts/edit/${id}`, post);\r\n      // await new Promise((resolve, reject) => setTimeout(resolve, 2000));\r\n      dispatch(endRequest());\r\n    } catch (e) {\r\n      dispatch(errorRequest(e.message));\r\n    }\r\n  };\r\n};\r\nexport const loadPostsByPageRequest = (page, postsPerPage = 3) => {\r\n  return async dispatch => {\r\n    dispatch(startRequest());\r\n    try {\r\n      const startAt = (page - 1) * postsPerPage;\r\n      const limit = postsPerPage;\r\n\r\n      let res = await axios.get(`${API_URL}/posts/range/${startAt}/${limit}`);\r\n      // await new Promise((resolve, reject) => setTimeout(resolve, 2000));\r\n\r\n      const payload = {\r\n        posts: res.data.posts,\r\n        amount: res.data.amount,\r\n        postsPerPage,\r\n        presentPage: page\r\n      };\r\n\r\n      dispatch(loadPostsByPage(payload));\r\n      dispatch(endRequest());\r\n    } catch (e) {\r\n      dispatch(errorRequest(e.message));\r\n    }\r\n  };\r\n};\r\nexport const getRequest = ({ posts }) => posts.request;\r\nexport const startRequest = () => ({ type: START_REQUEST });\r\nexport const endRequest = () => ({ type: END_REQUEST });\r\nexport const resetRequest = () => ({ type: RESET_REQUEST });\r\nexport const errorRequest = error => ({ error, type: ERROR_REQUEST });\r\nexport const loadPostsByPage = payload => ({ payload, type: LOAD_POSTS_PAGE });\r\nexport const getPages = ({ posts }) =>\r\n  Math.ceil(posts.amount / posts.postsPerPage);\r\n\r\nconst reducerName = \"posts\";\r\nconst createActionName = name => `app/${reducerName}/${name}`;\r\nexport const LOAD_POSTS = createActionName(\"LOAD_POSTS\");\r\nexport const LOAD_SINGLE_POST = createActionName(\"LOAD_SINGLE_POST\");\r\nexport const START_REQUEST = createActionName(\"START_REQUEST\");\r\nexport const END_REQUEST = createActionName(\"END_REQUEST\");\r\nexport const ERROR_REQUEST = createActionName(\"ERROR_REQUEST\");\r\nexport const RESET_REQUEST = createActionName(\"RESET_REQUEST\");\r\nexport const LOAD_POSTS_PAGE = createActionName(\"LOAD_POSTS_PAGE\");\r\n/* INITIAL STATE */\r\n\r\nconst initialState = {\r\n  data: [],\r\n  singlePost: {},\r\n  request: {\r\n    pending: false,\r\n    error: null,\r\n    success: null\r\n  },\r\n  amount: null,\r\n  postsPerPage: 3,\r\n  presentPage: 1\r\n};\r\n\r\n/* REDUCER */\r\n\r\nexport default function reducer(statePart = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case LOAD_POSTS:\r\n      return { ...statePart, data: action.payload };\r\n    case LOAD_SINGLE_POST:\r\n      return { ...statePart, singlePost: action.payload };\r\n    case LOAD_POSTS_PAGE:\r\n      return {\r\n        ...statePart,\r\n        postsPerPage: action.payload.postsPerPage,\r\n        presentPage: action.payload.presentPage,\r\n        amount: action.payload.amount,\r\n        data: [...action.payload.posts]\r\n      };\r\n    case START_REQUEST:\r\n      return {\r\n        ...statePart,\r\n        request: { pending: true, error: null, success: null }\r\n      };\r\n    case END_REQUEST:\r\n      return {\r\n        ...statePart,\r\n        request: { pending: false, error: null, success: true }\r\n      };\r\n    case RESET_REQUEST:\r\n      return {\r\n        ...statePart,\r\n        request: { pending: false, error: null, success: null }\r\n      };\r\n    case ERROR_REQUEST:\r\n      return {\r\n        ...statePart,\r\n        request: { pending: false, error: action.error, success: false }\r\n      };\r\n    default:\r\n      return statePart;\r\n  }\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Editor from \"react-medium-editor\";\r\nimport \"medium-editor/dist/css/medium-editor.css\";\r\nimport \"medium-editor/dist/css/themes/default.css\";\r\nimport Alert from \"../../common/Alert/Alert\";\r\nimport Spinner from \"../../common/Spinner/Spinner\";\r\nimport TextField from \"../../common/TextField/TextField\";\r\nimport SectionTitle from \"../../common/SectionTitle/SectionTitle\";\r\nimport Button from \"../../common/Button/Button\";\r\nimport {\r\n  addPostRequest,\r\n  updEditedPost,\r\n  resetRequest\r\n} from \"../../../redux/postsRedux\";\r\nimport \"./PostForm.scss\";\r\n\r\nconst PostForm = ({\r\n  addPost,\r\n  match,\r\n  resetRequest,\r\n  editedPost,\r\n  updEditedPost,\r\n  request: { success, error, pending }\r\n}) => {\r\n  useEffect(() => {\r\n    resetRequest();\r\n  }, []);\r\n  let typeOfAction;\r\n\r\n  Object.keys(editedPost).length > 0 && match.path !== \"/posts/new\"\r\n    ? (typeOfAction = true)\r\n    : (typeOfAction = false);\r\n\r\n  const [formData, setFormData] = useState({\r\n    author: (typeOfAction && editedPost.author) || \"\",\r\n    title: (typeOfAction && editedPost.title) || \"\",\r\n    content: (typeOfAction && editedPost.content) || \"\"\r\n  });\r\n\r\n  const { title, author, content } = formData;\r\n  const handleChange = e =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const handleEditor = text => {\r\n    setFormData({ ...formData, content: text });\r\n  };\r\n\r\n  const refreshPage = () => {\r\n    setTimeout(() => {\r\n      global.location.reload();\r\n    }, 5678);\r\n  };\r\n  const formSubmitted = () => {\r\n    if (typeOfAction === false) {\r\n      sendNewPost();\r\n    } else updPost();\r\n  };\r\n  const sendNewPost = () => {\r\n    const post = {\r\n      title,\r\n      author,\r\n      content\r\n    };\r\n    addPost(post);\r\n    refreshPage();\r\n  };\r\n\r\n  const updPost = () => {\r\n    const post = {\r\n      title,\r\n      author,\r\n      content\r\n    };\r\n\r\n    updEditedPost(post, editedPost._id);\r\n    refreshPage();\r\n  };\r\n\r\n  if (error) return <Alert variant=\"error\">{error}</Alert>;\r\n  else if (success)\r\n    return <Alert variant=\"success\">Post has been added!</Alert>;\r\n  else if (pending) return <Spinner />;\r\n  else\r\n    return (\r\n      <form\r\n        onSubmit={e => {\r\n          e.preventDefault();\r\n          formSubmitted();\r\n        }}\r\n      >\r\n        <TextField\r\n          label=\"Title\"\r\n          value={title}\r\n          onChange={handleChange}\r\n          name=\"title\"\r\n        />\r\n\r\n        <TextField\r\n          label=\"Author\"\r\n          value={author}\r\n          onChange={handleChange}\r\n          name=\"author\"\r\n        />\r\n\r\n        <SectionTitle>Edit post content</SectionTitle>\r\n\r\n        <Editor\r\n          className=\"content-editor\"\r\n          text={content}\r\n          onChange={handleEditor}\r\n          options={{\r\n            placeholder: false,\r\n            toolbar: {\r\n              buttons: [\"bold\", \"italic\", \"underline\", \"anchor\", \"h2\", \"h3\"]\r\n            }\r\n          }}\r\n        />\r\n        {typeOfAction === false ? (\r\n          <Button variant=\"primary\">Add post</Button>\r\n        ) : (\r\n          <Button variant=\"primary\">Update post</Button>\r\n        )}\r\n      </form>\r\n    );\r\n};\r\nPostForm.propTypes = {\r\n  request: PropTypes.object.isRequired,\r\n  addPost: PropTypes.func.isRequired,\r\n  resetRequest: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  request: state.posts.request,\r\n  editedPost: state.posts.singlePost\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  addPost: post => dispatch(addPostRequest(post)),\r\n  resetRequest: () => dispatch(resetRequest()),\r\n  updEditedPost: (post, id) => dispatch(updEditedPost(post, id))\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(PostForm));\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './SectionTitle.scss';\r\n\r\nconst SectionTitle = ({ children }) => (\r\n  <h2 className=\"section-title\">\r\n     {children}\r\n  </h2>\r\n);\r\n\r\nSectionTitle.propTypes = {\r\n  children: PropTypes.string,\r\n};\r\n\r\nexport default SectionTitle;\r\n","export const API_URL = \"/api\";\r\nexport const BASE_URL = \"http://localhost:3000/\";\r\n","import { createStore, applyMiddleware, combineReducers } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport posts from \"./postsRedux\";\r\n\r\nconst rootReducer = combineReducers({\r\n  posts\r\n});\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './PageContainer.scss';\n\nconst PageContainer = ({ children }) => (\n  <div className=\"container-fluid\">\n    {children}\n  </div>\n);\n\nPageContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default PageContainer;\n","import React, { Fragment } from \"react\";\r\n\r\nimport \"./Logo.scss\";\r\n\r\nconst Logo = ({ links, location }) => (\r\n  <Fragment>\r\n    <h1 className=\"logo\">Blog.app</h1>\r\n    <img src={links} alt=\"logo\" />\r\n  </Fragment>\r\n);\r\n\r\nexport default Logo;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { withRouter } from 'react-router-dom';\r\nimport './MainMenu.scss';\r\n\r\nconst MainMenu = ({ links, location }) => (\r\n  <ul className=\"main-menu\">\r\n    { links.map((link, index) =>\r\n      <li key={index}>\r\n        <Link className={(location.pathname === link.path && 'active') || ''} to={link.path}>{link.title}</Link>\r\n      </li>\r\n    )}\r\n  </ul>\r\n);\r\n\r\nMainMenu.propTypes = {\r\n  links: PropTypes.arrayOf(PropTypes.shape({\r\n    path: PropTypes.string.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n  })),\r\n};\r\n\r\nexport default withRouter(props => <MainMenu {...props}/>);\r\n","import axios from \"axios\";\r\nimport { API_URL } from \"../../../config\";\r\n\r\nexport const CreateRandomID = async () => {\r\n  try {\r\n    let res = await axios.get(`${API_URL}/ids`);\r\n    let ID = await res.data[Math.floor(Math.random() * res.data.length)];\r\n    return ID;\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Logo from \"../../common/Logo/Logo\";\r\nimport MainMenu from \"../../layout/MainMenu/MainMenu\";\r\nimport { CreateRandomID } from \"./CreateRandomID\";\r\nimport \"./NavBar.scss\";\r\n\r\nconst NavBar = () => {\r\n  const [links, setLinks] = useState([\r\n    { path: \"/\", title: \"Home\" },\r\n    { path: \"/posts/new\", title: \"Add post\" },\r\n    { path: \"/posts\", title: \"Posts\" },\r\n    { path: \"/contact\", title: \"Contact\" }\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    (async function wait4ID() {\r\n      const randomPost = await CreateRandomID();\r\n      setLinks([\r\n        ...links,\r\n        { path: `/posts/${randomPost}`, title: \"Random Post\" }\r\n      ]);\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <nav className=\"navbar\">\r\n      <Logo links=\"https://kszk.vot.pl/kszk.png\" />\r\n      <MainMenu links={links} />\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport PageContainer from \"../PageContainer/PageContainer\";\r\nimport NavBar from \"../../features/NavBar/NavBar\";\r\n\r\nconst MainLayout = ({ children }) => (\r\n  <div>\r\n    <PageContainer>\r\n      <NavBar />\r\n      {children}\r\n    </PageContainer>\r\n  </div>\r\n);\r\n\r\nexport default MainLayout;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './PageTitle.scss';\n\nconst PageTitle = ({ children }) => (\n  <h1 className=\"page-title\">\n     {children}\n  </h1>\n);\n\nPageTitle.propTypes = {\n  children: PropTypes.string,\n};\n\nexport default PageTitle;\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport \"./Pagination.scss\";\r\n\r\nclass Pagination extends React.Component {\r\n  state = {\r\n    presentPage: this.props.initialPage || 1\r\n  };\r\n\r\n  changePage = (newPage, postsOnPage) => {\r\n    const { loadPostsByPage } = this.props;\r\n    this.setState({ presentPage: newPage });\r\n    loadPostsByPage(newPage, postsOnPage);\r\n  };\r\n  getSeenStatus = () => {\r\n    const { match } = this.props;\r\n    if (match.path === \"/\") {\r\n      return { display: \"none\" };\r\n    } else {\r\n      return {};\r\n    }\r\n  };\r\n  render() {\r\n    const { pages, postsNo, postsOnPage, currentPage } = this.props;\r\n    const { changePage } = this;\r\n\r\n    return (\r\n      <div className=\"ppagination\" style={this.getSeenStatus()}>\r\n        <ul className=\"ppagination__list\">\r\n          {currentPage > 1 ? (\r\n            <li>\r\n              <button\r\n                className=\"btn-ppagination\"\r\n                onClick={() => {\r\n                  console.log(postsOnPage);\r\n                  changePage(currentPage - 1, postsOnPage);\r\n                }}\r\n              >\r\n                <i className=\"fas fa-arrow-left\"></i>\r\n              </button>\r\n            </li>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n\r\n          {[...Array(pages)].map((el, page) => (\r\n            <li\r\n              key={++page}\r\n              onClick={() => {\r\n                changePage(page, postsOnPage);\r\n              }}\r\n              className={`ppagination__list__item ppagination__list__item${\r\n                page === currentPage ? \"--active\" : \"\"\r\n              }`}\r\n            >\r\n              {postsOnPage !== 123456789 ? `${page}` : \"\"}\r\n            </li>\r\n          ))}\r\n          {currentPage < pages ? (\r\n            <li>\r\n              <button\r\n                className=\"btn-ppagination\"\r\n                onClick={() => {\r\n                  changePage(currentPage + 1, postsOnPage);\r\n                }}\r\n              >\r\n                <i className=\"fas fa-arrow-right\"></i>\r\n              </button>\r\n            </li>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPagination.propTypes = {\r\n  pages: PropTypes.number.isRequired,\r\n  initialPage: PropTypes.number,\r\n  loadPostsByPage: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withRouter(Pagination);\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './SmallTitle.scss';\n\nconst SmallTitle = ({ children, ...otherProps }) => (\n  <h2 {...otherProps} className=\"small-title\">\n    { children }\n  </h2>\n);\n\nSmallTitle.propTypes = {\n  children: PropTypes.string,\n};\n\nexport default SmallTitle;\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\n\r\nconst HtmlBox = ({ children, ...otherProps }) => (\r\n  <div {...otherProps} className=\"html-box\">\r\n    {ReactHtmlParser(children)}\r\n  </div>\r\n);\r\n\r\nHtmlBox.propTypes = {\r\n  children: PropTypes.string\r\n};\r\n\r\nexport default HtmlBox;\r\n","import React, { Fragment } from \"react\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./PostSummary.scss\";\r\nimport Button from \"../../common/Button/Button\";\r\nimport SmallTitle from \"../../common/SmallTitle/SmallTitle\";\r\nimport HtmlBox from \"../../common/HtmlBox/HtmlBox\";\r\nimport cutText from \"../../common/CutText/CutText\";\r\n\r\nconst PostSummary = ({ _id, title, content, author }) => (\r\n  <article className=\"post-summary\">\r\n    <SmallTitle>{title}</SmallTitle>\r\n    <HtmlBox>{cutText(content, 250)}</HtmlBox>\r\n    <Fragment>\r\n      <p>\r\n        Author: <strong>{author}</strong>\r\n      </p>\r\n    </Fragment>\r\n    <Link to={`/posts/${_id}`}>\r\n      <Button variant=\"primary\">Read more</Button>\r\n    </Link>\r\n  </article>\r\n);\r\n\r\nPostSummary.propTypes = {\r\n  _id: PropTypes.string,\r\n  title: PropTypes.string,\r\n  content: PropTypes.string,\r\n  author: PropTypes.string,\r\n  getPost: PropTypes.func\r\n};\r\n\r\nexport default PostSummary;\r\n","export default (content, maxLength) => {\r\n  if (content.length < 1) return \"Error\";\r\n  if (content.length <= maxLength) return content;\r\n  const shortenText = content.substr(0, content.lastIndexOf(\" \", maxLength));\r\n  if (shortenText.slice(-1) === \".\" || shortenText.slice(-1) === \",\") {\r\n    return shortenText.substring(0, shortenText.length - 1) + \"...\";\r\n  } else {\r\n    return shortenText + \"...\";\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { PropTypes } from \"prop-types\";\r\n\r\nimport PostSummary from \"../PostSummary/PostSummary\";\r\n\r\nconst PostsList = ({ posts }) => (\r\n  <div>\r\n    <section className=\"posts-list\">\r\n      {posts.map(post => (\r\n        <PostSummary key={post.id} {...post} />\r\n      ))}\r\n    </section>\r\n  </div>\r\n);\r\n\r\nPostsList.propTypes = {\r\n  posts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      title: PropTypes.string.isRequired,\r\n      content: PropTypes.string.isRequired,\r\n      author: PropTypes.string.isRequired\r\n    })\r\n  )\r\n};\r\n\r\nexport default PostsList;\r\n","import React, { Fragment } from \"react\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport Pagination from \"../../common/Pagination/Pagination\";\r\nimport Spinner from \"../../common/Spinner/Spinner\";\r\nimport Alert from \"../../common/Alert/Alert\";\r\nimport PostsList from \"../PostsList/PostsList\";\r\n\r\nclass Posts extends React.Component {\r\n  componentDidMount() {\r\n    const { loadPostsByPage, postsOnPage } = this.props;\r\n    loadPostsByPage(1, postsOnPage);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      posts,\r\n      pages,\r\n      request: { pending, error, success },\r\n      postsNo,\r\n      postsOnPage,\r\n      currentPage,\r\n      loadPostsByPage\r\n    } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        {(pending || success === null) && <Spinner />}\r\n        {posts.length\r\n          ? !pending &&\r\n            success && (\r\n              <Fragment>\r\n                <PostsList posts={posts} />{\" \"}\r\n                <Pagination\r\n                  pages={pages}\r\n                  postsNo={postsNo}\r\n                  postsOnPage={postsOnPage}\r\n                  currentPage={currentPage}\r\n                  loadPostsByPage={loadPostsByPage}\r\n                />\r\n              </Fragment>\r\n            )\r\n          : \"\"}\r\n        {!pending && error !== null && <Alert variant={\"error\"}>{error}</Alert>}\r\n        {!pending && success && !posts.length && (\r\n          <Alert variant={\"info\"}>No posts</Alert>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPosts.propTypes = {\r\n  posts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      title: PropTypes.string.isRequired,\r\n      content: PropTypes.string.isRequired,\r\n      author: PropTypes.string.isRequired\r\n    })\r\n  ),\r\n  request: PropTypes.object.isRequired,\r\n  pages: PropTypes.number.isRequired,\r\n  postsNo: PropTypes.number,\r\n  postsOnPage: PropTypes.number,\r\n  currentPage: PropTypes.number\r\n};\r\n\r\nexport default Posts;\r\n","import { connect } from \"react-redux\";\r\nimport {\r\n  getPosts,\r\n  getRequest,\r\n  loadPostsByPageRequest,\r\n  getPages\r\n} from \"../../../redux/postsRedux\";\r\nimport Posts from \"./Posts\";\r\n\r\nconst mapStateToProps = state => ({\r\n  posts: getPosts(state),\r\n  request: getRequest(state),\r\n  pages: getPages(state),\r\n  postsNo: state.posts.amount,\r\n  postsOnPage: state.posts.postsPerPage,\r\n  currentPage: state.posts.presentPage\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  loadPostsByPage: (page, postsPerPage) =>\r\n    dispatch(loadPostsByPageRequest(page, postsPerPage))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Posts);\r\n","import React from \"react\";\r\nimport PageTitle from \"../../common/PageTitle/PageTitle\";\r\nimport Posts from \"../../features/Posts/PostsContainer\";\r\n\r\nconst HomePage = () => (\r\n  <div>\r\n    <PageTitle>Blog</PageTitle>\r\n    <Posts />\r\n  </div>\r\n);\r\n\r\nexport default HomePage;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst PostsCounter = ({ posts, success, amount }) => {\r\n  return posts.length > 0 && success ? (\r\n    <div>Posts counter {amount}</div>\r\n  ) : (\r\n    <div>There are no posts in this category</div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  posts: state.posts.data,\r\n  success: state.posts.request.success,\r\n  amount: state.posts.amount\r\n});\r\n\r\nPostsCounter.propsType = {\r\n  posts: PropTypes.array.isRequired,\r\n  amount: PropTypes.number\r\n};\r\n\r\nexport default connect(mapStateToProps)(PostsCounter);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { loadPostsByPageRequest } from \"../../../redux/postsRedux\";\r\n\r\nconst PageParameters = ({\r\n  postsNo,\r\n  postsOnPage,\r\n  currentPage,\r\n  loadPostsByPageRequest\r\n}) => {\r\n  const forPageSelection = Math.ceil(postsNo / postsOnPage);\r\n\r\n  const [formData, setFormData] = useState({\r\n    postPerPage: postsOnPage,\r\n    startPage: 1\r\n  });\r\n  const { postPerPage, startPage } = formData;\r\n  const onChange = async e => {\r\n    const { name, value } = e.target;\r\n    await setFormData({ ...formData, [name]: value });\r\n    console.log(name, value);\r\n    if (name === \"startPage\") {\r\n      loadPostsByPageRequest(value * 1, postPerPage * 1);\r\n    } else {\r\n      loadPostsByPageRequest(startPage * 1, value * 1);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form>\r\n      <div className=\"form-row\">\r\n        <div className=\"form-group col-md-4\">\r\n          <select\r\n            name=\"postPerPage\"\r\n            value={postPerPage}\r\n            onChange={onChange}\r\n            className=\"form-control\"\r\n          >\r\n            <option value=\"1\">1</option>\r\n            <option value=\"3\">(default) 3</option>\r\n            <option value=\"5\">5</option>\r\n            <option value=\"10\">10</option>\r\n            <option value=\"25\">25</option>\r\n            <option value=\"100\">100</option>\r\n            <option value=\"123456789\">All of them</option>\r\n          </select>\r\n          <small className=\"form-text\">How many posts per page ?</small>\r\n        </div>\r\n        <div className=\"form-group col-md-4\">\r\n          <select\r\n            name=\"startPage\"\r\n            value={startPage}\r\n            onChange={onChange}\r\n            className=\"form-control\"\r\n          >\r\n            {[...Array(forPageSelection)].map((el, index) => (\r\n              <option value={index + 1} key={index}>\r\n                {index == 0 ? `(default) ${index + 1}` : `${index + 1}`}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          <small className=\"form-text\">Select start page.</small>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\nconst mapStateToProps = state => ({\r\n  postsNo: state.posts.amount,\r\n  postsOnPage: state.posts.postsPerPage,\r\n  currentPage: state.posts.presentPage\r\n});\r\n\r\nexport default connect(mapStateToProps, { loadPostsByPageRequest })(\r\n  PageParameters\r\n);\r\n","import React from \"react\";\r\n\r\nimport PageTitle from \"../../common/PageTitle/PageTitle\";\r\nimport PostsCounter from \"../../features/PostsCounter/PostsCounter\";\r\nimport PageParameters from \"../../features/PageParameters/PageParameters\";\r\nimport Posts from \"../../features/Posts/PostsContainer\";\r\n\r\nconst PostsPage = () => (\r\n  <div>\r\n    <PageTitle>Posts list</PageTitle>\r\n    <PageParameters />\r\n    <PostsCounter />\r\n    <Posts />\r\n  </div>\r\n);\r\n\r\nexport default PostsPage;\r\n","import React from \"react\";\r\n\r\nconst ContactPage = () => (\r\n  <div className=\"card\" style={{ width: \"18rem\" }}>\r\n    <div className=\"card-body\">\r\n      <h1 className=\"card-title\">Contact</h1>\r\n      <p className=\"card-text\">\r\n        Your Favourite Blooger Ltd. 9432 Division Street Stone Mountain, GA\r\n        30083 Mobile Number: 207-914-3411\r\n      </p>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default ContactPage;\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass NotFound extends Component {\r\n  state = {\r\n    counter: 7\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    const intervalId = setInterval(this.countdown, 1000);\r\n    this.setState({ intervalId });\r\n  };\r\n\r\n  componentWillUnmount = () => {\r\n    clearInterval(this.state.intervalId);\r\n  };\r\n  countdown = () => {\r\n    this.setState({ counter: this.state.counter - 1 });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>\r\n          This way{\" \"}\r\n          <code style={{ color: \"#cba\" }}>{this.props.location.pathname}</code>{\" \"}\r\n          is to nowhere...\r\n        </h1>\r\n        <p> Redirect to homepage in {this.state.counter} seconds </p>\r\n        {!this.state.counter && <Redirect to=\"/\" />}\r\n        <img src=\"./img/deadend.jpg\" className=\"card-img-top\" alt=\"DeadEnd\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\r\nimport PostForm from \"../../features/PostForm/PostForm\";\r\n\r\nconst AddPostPage = () => (\r\n  <div>\r\n    <h1>Add Post</h1>\r\n    <PostForm />\r\n  </div>\r\n);\r\n\r\nexport default AddPostPage;\r\n","import React, { useEffect, Fragment, Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Spinner from \"../../common/Spinner/Spinner\";\r\nimport Alert from \"../../common/Alert/Alert\";\r\nimport PageTitle from \"../../common/PageTitle/PageTitle\";\r\nimport HtmlBox from \"../../common/HtmlBox/HtmlBox\";\r\nimport Button from \"../../common/Button/Button\";\r\nimport { getSinglePost } from \"../../../redux/postsRedux\";\r\nimport { FacebookProvider, Comments, ShareButton } from \"react-facebook\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { BASE_URL } from \"../../../config\";\r\nimport \"./PostItemPage.scss\";\r\n\r\nconst PostItemPage = ({\r\n  match,\r\n  location,\r\n  getSinglePost,\r\n  singlePost: { title, content, author },\r\n  request: { pending, error, success }\r\n}) => {\r\n  useEffect(() => {\r\n    getSinglePost(match.params.id);\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"post-summary\">\r\n        {pending || success === null ? (\r\n          <Spinner />\r\n        ) : (\r\n          <Fragment>\r\n            <PageTitle>{title}</PageTitle>\r\n            <p>\r\n              Author: <strong>{author}</strong>\r\n            </p>\r\n            <HtmlBox>{content}</HtmlBox>\r\n            <Link to=\"/posts\">\r\n              <Button variant=\"primary\">Return to posts</Button>\r\n            </Link>\r\n            <Link to={`/posts/edit/${match.params.id}`}>\r\n              <Button variant=\"default\">Post editing...</Button>\r\n            </Link>\r\n            {!pending && error !== null && (\r\n              <Alert variant={\"error\"}>{error}</Alert>\r\n            )}\r\n          </Fragment>\r\n        )}\r\n      </div>\r\n      <FacebookProvider appId=\"166763024612541\">\r\n        <ShareButton href=\"http://www.facebook.com\">\r\n          <span>\r\n            Share on &nbsp;\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              width=\"16.719\"\r\n              height=\"33.03\"\r\n              viewBox=\"0 0 16.719 33.03\"\r\n            >\r\n              <path\r\n                d=\"M565.456,2460.27h-3.789v5.64h3.789v16.58h7.287v-16.65h5.084l0.541-5.57h-5.625v-3.17c0-1.31.29-1.84,1.682-1.84h3.943v-5.78h-5.045c-5.422,0-7.867,2.18-7.867,6.35v4.44Z\"\r\n                transform=\"translate(-561.656 -2449.47)\"\r\n              ></path>\r\n            </svg>\r\n          </span>\r\n        </ShareButton>\r\n        <Comments href={`${BASE_URL}${location.pathname}`} />\r\n      </FacebookProvider>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nPostItemPage.propTypes = {\r\n  getSinglePost: PropTypes.func,\r\n  singlePost: PropTypes.object\r\n};\r\nconst mapStateToProps = state => ({\r\n  singlePost: state.posts.singlePost,\r\n  request: state.posts.request\r\n});\r\n\r\nexport default connect(mapStateToProps, { getSinglePost })(\r\n  withRouter(PostItemPage)\r\n);\r\n","import React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\n\r\nimport MainLayout from \"./components/layout/MainLayout/MainLayout\";\r\n\r\n// import routes\r\nimport Home from \"./components/pages/Home/HomePage\";\r\nimport Posts from \"./components/pages/Posts/PostsPage\";\r\nimport Contact from \"./components/pages/Contact/ContactPage\";\r\nimport NotFound from \"./components/pages/NotFound/NotFoundPage\";\r\nimport AddPost from \"./components/pages/AddPost/AddPostPage\";\r\nimport PostItem from \"./components/pages/PostItem/PostItemPage\";\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <MainLayout>\r\n        <Switch>\r\n          <Route path=\"/\" exact component={Home} />\r\n          <Route path=\"/posts\" exact component={Posts} />\r\n          <Route path=\"/contact\" exact component={Contact} />\r\n          <Route path=\"/posts/new\" exact component={AddPost} />\r\n          <Route path=\"/posts/edit/:id\" component={AddPost} />\r\n          <Route path=\"/posts/:id\" component={PostItem} />\r\n          <Route component={NotFound} />\r\n        </Switch>\r\n      </MainLayout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport \"./styles/global.scss\";\r\nimport \"animate.css/animate.min.css\";\r\nimport App from \"./App\";\r\n\r\nconst Root = () => (\r\n  <Provider store={store}>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </Provider>\r\n);\r\n\r\nReactDOM.render(<Root />, document.getElementById(\"root\"));\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Animated } from 'react-animated-css';\r\nimport { MdInfoOutline, MdDone, MdErrorOutline } from 'react-icons/md';\r\n\r\nimport './Alert.scss';\r\n\r\nconst Alert = ({ variant = '', children, ...otherProps }) => {\r\n\r\n  const icon = () => {\r\n    switch(variant) {\r\n      case 'info':\r\n        return <MdInfoOutline />\r\n      case 'success':\r\n        return <MdDone />\r\n      case 'warning':\r\n        return <MdErrorOutline />\r\n      case 'error':\r\n        return <MdErrorOutline />\r\n      default:\r\n        return <MdInfoOutline />\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Animated animationIn=\"fadeIn\" animationOut=\"fadeOut\">\r\n      <div {...otherProps} className={`alert alert--${variant}`}>\r\n        {icon()}\r\n        <span className=\"alert__desc\">{children}</span>\r\n      </div>\r\n    </Animated>\r\n  )\r\n\r\n};\r\n\r\nAlert.propTypes = {\r\n  variant: PropTypes.string.isRequired,\r\n  children: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Alert;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Button.scss';\r\n\r\nconst Button = ({ variant = '', children, ...otherProps }) => (\r\n  <button { ...otherProps } className={ `button button--${variant}`}>\r\n    { children }\r\n  </button>\r\n);\r\n\r\nButton.propTypes = {\r\n  variant: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\nimport { Animated } from 'react-animated-css';\n\nimport './Spinner.scss';\n\nconst Spinner = () => (\n  <Animated animationIn=\"fadeIn\" animationOut=\"fadeOut\">\n    <div className=\"lds-ellipsis\">\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  </Animated>\n);\n\nexport default Spinner;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './TextField.scss';\r\n\r\nconst TextField = ({ value, label, onChange, ...otherProps }) => (\r\n  <label className=\"text-field\">\r\n    <span className={`text-field__label ${(!value.length > 0) ? 'text-field__label--big' : ''}`}>{label}</span>\r\n    <input {...otherProps} value={value} onChange={onChange} className=\"text-field__input\" />\r\n  </label>\r\n);\r\n\r\nTextField.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default TextField;\r\n"],"sourceRoot":""}